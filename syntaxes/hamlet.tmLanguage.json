{
  "scopeName": "source.yesod.hamlet",
  "fileTypes": [
    "hamlet"
  ],
  "name": "Yesod Hamlet",
  "patterns": [
    {
      "include": "#interpolation"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#comment"
    },
    {
      "include": "#tag"
    }
  ],
  "repository": {
    "interpolation": {
      "patterns": [
        {
          "begin": "([_@#^\\*]|@\\?)\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.interpolation.begin.hamlet"
            }
          },
          "contentName": "source.haskell.embedded",
          "end": "(\\})",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.interpolation.end.hamlet"
            }
          },
          "name": "meta.interpolation.hamlet",
          "patterns": [
            {
              "include": "source.haskell"
            }
          ]
        }
      ]
    },
    "keyword": {
      "patterns": [
        {
          "match": "\\$(else|nothing|doctype|newline)\\s+",
          "name": "keyword.control.hamlet"
        },
        {
          "begin": "\\$(if|elseif|maybe|forall|case|of|with)\\s+",
          "beginCaptures": {
            "0": {
              "name": "keyword.control.hamlet"
            }
          },
          "contentName": "source.haskell.embedded",
          "end": "\\n",
          "name": "meta.interpolation.hamlet",
          "patterns": [
            {
              "include": "source.haskell"
            }
          ]
        },
        {
          "match": "#$|^\\s*\\\\",
          "name": "keyword.operator.hamlet"
        }
      ]
    },
    "comment": {
      "patterns": [
        {
          "match": "^\\s*\\$#.*$",
          "name": "comment.line.$#.hamlet"
        }
      ]
    },
    "tag": {
      "patterns": [
        {
          "begin": "(<)([a-z]+)",
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.generic.begin.hamlet"
            },
            "2": {
              "name": "entity.name.tag.hamlet"
            }
          },
          "end": ">",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.generic.end.hamlet"
            }
          },
          "name": "meta.tag.hamlet",
          "patterns": [
            {
              "include": "#interpolation"
            },
            {
              "begin": "(?<==)\"",
              "end": "\"",
              "name": "string.quoted.double.hamlet",
              "patterns": [
                {
                  "include": "#interpolation"
                }
              ]
            },
            {
              "begin": "(?<==)'",
              "end": "'",
              "name": "string.quoted.single.hamlet",
              "patterns": [
                {
                  "include": "#interpolation"
                }
              ]
            },
            {
              "include": "#attribute"
            }
          ]
        }
      ],
      "repository": {
        "attribute": {
          "patterns": [
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.section.interpolation.begin.hamlet"
                }
              },
              "contentName": "source.haskell.embedded",
              "end": "(:)(.*?)(?=(>|\\s))",
              "endCaptures": {
                "1": {
                  "name": "punctuation.section.interpolation.end.hamlet"
                },
                "2": {
                  "name": "entity.other.attribute-name.hamlet"
                }
              },
              "patterns": [
                {
                  "include": "#interpolation"
                }
              ]
            },
            {
              "begin": "\\s(#|\\.)",
              "end": "(?=(>|\\s))",
              "name": "entity.other.attribute-name.hamlet",
              "patterns": [
                {
                  "include": "#interpolation"
                },
                {
                  "match": "-?[_a-zA-Z]+[_a-zA-Z0-9-]"
                }
              ]
            }
          ]
        }
      }
    }
  }
}
